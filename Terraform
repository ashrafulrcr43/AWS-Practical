# How to start Terraform on AWS provider 
# Fast install Terraform and AWS Cli 
# Check Version 
 
# 1. making provider 
provider "aws" {
  region     = "ap-south-1"
  access_key = ""
  secret_key = ""
}
# 2. Run Comment To Connect AWS 
   1. terrafrom init
   2. terraform validate

# 3. Making Resources Create Ec2 instance 

resource "aws_instance" "my_ec2_instance" {
  ami           = "ami-021a584b49225376d" 
  instance_type = "t2.medium"
  key_name      = "terraform" # key_name like .ppk or .pem file
  tags = {
    Name = "MyTerraformEC2"
  }
}
# Check All Paln
terraform plan
# Apply All 
terraform apply

# 4. Multipule Instance Create 
resource "aws_instance" "my_ec2_instance" {
  count         = 3
  ami           = "ami-021a584b49225376d" 
  instance_type = "t2.medium"
  key_name      = "terraform"
  tags = {
    Name = "Server-${count.index + 1}"
  }
}
# 5. Method 2 to connect terrafrom to AWS on Cli
provider "aws" {
  region     = "ap-south-1"
}

resource "aws_instance" "my_ec2_instance" {
  ami           = "ami-021a584b49225376d" 
  instance_type = "t2.medium"
  key_name      = "terraform" # key_name like .ppk or .pem file
  tags = {
    Name = "MyTerraformEC2"
  }
}
# Run comment to connect AWS 
aws configure
# Show output public ip example 

output "instance_public_ip" {
  value = aws_instance.my_ec2_instance.public_ip
}
# full code to show output


provider "aws" {
  region     = "ap-south-1"
}


resource "aws_instance" "my_ec2_instance" {
  ami           = "ami-021a584b49225376d" 
  instance_type = "t2.medium"
  key_name      = "terraform" # key_name like .ppk or .pem file
  tags = {
    Name = "MyTerraformEC2"
  }
}

output "instance_public_ip" {
  value = aws_instance.my_ec2_instance.public_ip
}
# Terraform Variable Declaration


